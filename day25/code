class Solution:
    def isMatch(self, s: str, p: str) -> bool:
        S, P = len(s), len(p)

        suffs = [True] * (P + 1)
        for i in range(P - 1, -1, -1):
            suffs[i] = (p[i] == "*") and suffs[i+1]

        @cache
        def dfs(i, j):
            if i == S:
                return suffs[j]
            if i == S or j == P:
                return False
            
            if p[j] == "?":
                return dfs(i+1, j+1)
            if p[j] == "*":
                return dfs(i+1, j) or dfs(i, j+1)
            if s[i] == p[j]:
                return dfs(i+1, j+1)
            return False
        
        return dfs(0, 0)
